AWSTemplateFormatVersion: '2010-09-09'
Description: Prerrequisitos de despliegue - Usuario github-deploy con permisos especificos para automatizacion 

Parameters:
  OrgId:
    Type: String
    Description: ID de la organizacion AWS 

  AuditBucketName:
    Type: String
    Description: Nombre del bucket S3 central de auditoria y logs

  AWSServiceRoleForConfig:
    Type: String
    Description: ARN del rol AWSServiceRoleForConfig

Resources:

  GitHubDeployUser:
    Type: AWS::IAM::User
    Properties:
      UserName: github-deploy
      Policies:
        - PolicyName: GitHubDeployPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: SecurityHubOperations
                Effect: Allow
                Action:
                  - securityhub:EnableSecurityHub
                  - securityhub:BatchEnableStandards
                  - securityhub:DescribeHub
                  - securityhub:DescribeStandards
                  - securityhub:GetFindings
                  - securityhub:GetEnabledStandards
                  - securityhub:ListMembers
                  - securityhub:GetAdhocInsightResults
                  - securityhub:ListFindingAggregators
                Resource: '*'
              - Sid: IAMForAutomation
                Effect: Allow
                Action:
                  - iam:CreateUser
                  - iam:CreateGroup
                  - iam:AddUserToGroup
                  - iam:PutGroupPolicy
                  - iam:ListGroups
                  - iam:ListUsers
                  - iam:GetUser
                  - iam:CreateLoginProfile
                  - iam:ListGroupsForUser
                Resource: '*'

  GitHubDeployAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref GitHubDeployUser
      Status: Active
  ##  Clave KMS 
  TrailKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Clave KMS para cifrado
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: RootAccess
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Sid: AllowCloudTrail
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action:
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
            Resource: '*'
            Condition:
              StringEquals:
                kms:EncryptionContext:aws:cloudtrail:arn: !Sub arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/OrgTrail
  ##  Bucket S3 central de logs 
  AuditBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref AuditBucketName
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  AuditBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AuditBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowConfigPut
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub arn:aws:s3:::${AuditBucketName}/config-logs/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AllowConfigGetAcl
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${AuditBucketName}
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${AuditBucketName}
          - Sid: AllowCloudTrailPut
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub arn:aws:s3:::${AuditBucketName}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  CloudTrailLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/cloudtrail/logs
      RetentionInDays: 90
  CloudTrailCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CloudTrailLogsRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudTrailLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:CreateLogStream
                Resource: !GetAtt CloudTrailLogGroup.Arn

  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: MyOrganizationTrail
      S3BucketName: !Ref AuditBucket
      IsLogging: true
      IsMultiRegionTrail: true
      IncludeGlobalServiceEvents: true
      EnableLogFileValidation: true
      InsightSelectors:
      - InsightType: ApiCallRateInsight
      - InsightType: ApiErrorRateInsight
      EventSelectors:
        - ReadWriteType: All
          IncludeManagementEvents: true
          DataResources:
            - Type: AWS::S3::Object
              Values:
                - !Sub arn:aws:s3:::${AuditBucketName}/
      CloudWatchLogsLogGroupArn: !GetAtt CloudTrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt CloudTrailCloudWatchLogsRole.Arn
              
  ##  AWS Config
  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      RoleARN: !Ref AWSServiceRoleForConfig
      Name: default
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true

  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      S3BucketName: !Ref AuditBucket
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: One_Hour
      S3KeyPrefix: config-logs

  S3BucketPublicReadProhibited:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: s3-bucket-public-read-prohibited
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED

  IAMRootAccessKeyCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: iam-root-access-key-check
      Source:
        Owner: AWS
        SourceIdentifier: IAM_ROOT_ACCESS_KEY_CHECK

  EC2InstanceManagedBySSM:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ec2-instance-managed-by-ssm
      Source:
        Owner: AWS
        SourceIdentifier: EC2_INSTANCE_MANAGED_BY_SSM
        
##  GuardDuty Detector 
  GuardDutyDetector:
    Type: AWS::GuardDuty::Detector
    Properties:
      Enable: true
      FindingPublishingFrequency: FIFTEEN_MINUTES
      DataSources:
        S3Logs:
          Enable: true
        Kubernetes:
          AuditLogs:
            Enable: true

  DefaultVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: DefaultTestVPC

  GuardDutyTestSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permite trafico de entrada para pruebas con GuardDuty
      VpcId: !Ref DefaultVPC
      SecurityGroupIngress:
        - IpProtocol: "-1"        
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: GuardDutyTestSG

  TestSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: eu-west-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: TestSubnet

  GuardDutyTestInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0152ea7e79f25bb5b
      SubnetId: !Ref TestSubnet 
      SecurityGroupIds:
        - !Ref GuardDutyTestSecurityGroup
      Tags:
        - Key: Name
          Value: guardduty-test-instance

Outputs:
  InstanceId:
    Description: ID de la instancia creada
    Value: !Ref GuardDutyTestInstance

  GitHubDeployAccessKeyId:
    Description: Access Key ID para el usuario github-deploy
    Value: !Ref GitHubDeployAccessKey
    Export:
      Name: GitHubDeployAccessKeyId

  GitHubDeploySecretAccessKey:
    Description: Secret Access Key para el usuario github-deploy
    Value: !GetAtt GitHubDeployAccessKey.SecretAccessKey
    Export:
      Name: GitHubDeploySecretAccessKey
